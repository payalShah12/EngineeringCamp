{"version":3,"sources":["/Users/jasonaden/Projects/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","callGuard","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","_originalFileMemo","getOriginalName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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AAa,eAAgB,cAEhE9iB,gBAAgBkF,gBAAgB6d,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAIynD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZrxD,yBA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","file":"/Users/jasonaden/Projects/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.2.0-beta.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.2.0-beta.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.2.0-beta.0');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    result.push({ guard: guard, expression: /** @type {?} */ ({ context: this.component, value: input.value }) });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ callGuard = this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(callGuard) : callGuard;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts').replace(/^.*node_modules[/\\\\]/, '');\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error) {\n    return !!(/** @type {?} */ (error))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            result[name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length)] =\n                this.getStaticSymbol(type.filePath, type.name, [name_1]);\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error) {\n    return !!(/** @type {?} */ (error))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return \"references non-exported class \" + error.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return \"calls '\" + error.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return \"references local variable \" + error.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}