{"version":3,"file":"StateManager.js","sourceRoot":"","sources":["../../src/StateManager.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C;IADA;QAEY,gBAAW,GAAW,2BAA2B,CAAC;IAe9D,CAAC;IAbG,oCAAa,GAAb,UAAc,UAAkB;QAC5B,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;IACL,CAAC;IAED,oCAAa,GAAb,UAAc,QAAgB;QAC1B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAfQ,YAAY;QADxB,UAAU,EAAE;OACA,YAAY,CAgBxB;IAAD,mBAAC;CAAA,AAhBD,IAgBC;SAhBY,YAAY","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StateManager {\n    private _locStorVar: string = 'ng2-data-table-pagination';\n\n    getPagination(rowsOnPage: number) : number {\n        let pagePref = window.localStorage.getItem(this._locStorVar);\n        if (pagePref) {\n            return parseInt(pagePref);\n        }\n        else {\n            return rowsOnPage;\n        }\n    }\n\n    setPagination(pagePref: string) : void {\n        window.localStorage.setItem(this._locStorVar, pagePref);\n    }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}